[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'Shougo/defx.nvim'
depends = ["defx-git"]

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
hook_add = '''
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
let g:neosnippet#enable_snipmate_compatibility = 1
let g:neosnippet#enable_completed_snippet = 1
let g:neosnippet#expand_word_boundary = 1
'''

# deoplete
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_add = '''
source ~/dotfiles/nvim/plugins/deoplete.rc.vim
'''

# deoplete on vim requires plugin 1/2
[[plugins]]
repo = 'roxma/nvim-yarp'

# deoplete on vim requires plugin 2/2
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'simeji/winresizer'
# Vim Window resize
# Ctrl + E => hjkl

[[plugins]]
repo = 'tomtom/tcomment_vim'
# comment out
# Ctrl + v -> Ctrl + --

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = "['markdown', 'pandoc.markdown', 'rmd']"
build = "sh -c 'cd app & yarn install'"
# Ctrl + M

[[plugins]]
repo = 'preservim/nerdtree'
hook_add = '''
  let g:NERDTreeQuitOnOpen = 1
'''
# Ctrl + n => Toggle

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
# NERDTree showing git status flags

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
# :FixWhitespace => white space delete.

[[plugins]]
repo = 'tpope/vim-fugitive'
# :Gstatus
# :Gdiff
# :Gwrite git add
# :Gblame

[[plugins]]
repo = 'airblade/vim-gitgutter'
# display git diffidence. [c & ]c is Jump hank.

[[plugins]]
repo = 'kaicataldo/material.vim'

[[plugins]]
repo  = 'prettier/vim-prettier'
build =  'yarn add'
on_ft = ['javascript', 'typescript', 'vue', 'css', 'scss', 'json', 'markdown']
hook_source = '''
let g:prettier#autoformat_require_pragma = 0
let g:prettier#exec_cmd_async = 1
let g:prettier#quickfix_enabled = 0
autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue PrettierAsync
'''

[[plugins]]
repo = 'alvan/vim-closetag'
hook_add = '''
  let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.erb,*.php,*.vue'
'''

[[plugins]]
repo = 'gko/vim-coloresque'

[[plugins]]
repo = 'posva/vim-vue'
hook_add = '''
let g:vue_pre_processors = ['scss','typescript']
'''

[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'vim-syntastic/syntastic'


# ==========================================================
# LSP
# ==========================================================
[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
build = 'bash install.sh'
rev = 'next'
hook_add = '''
set hidden
let g:LanguageClient_loadSettings=1
let g:LanguageClient_serverCommands = {
    \ 'vue': ['vls'],
    \ 'html': [],
    \ 'javascript': ['javascript-typescript-stdio'],
    \ 'typescript': ['javascript-typescript-stdio'],
    \ 'css': [],
    \ }
nnoremap <F5> :call LanguageClient_contextMenu()<CR>
nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
nnoremap <silent> <F3> :call LanguageClient#textDocument_formatting()<CR>
'''
